"""
PrisyBot - Un bot Discord pour la musique et les utilitaires
Ce bot utilise discord.py pour g√©rer les interactions avec Discord 
et yt-dlp pour la lecture de musique.
Il inclut des fonctionnalit√©s pour jouer de la musique depuis YouTube, 
g√©rer une file d'attente,
et interagir avec les salons vocaux.
"""
import logging
import discord
from discord.player import AudioSource
from bot.config import GUILD_ID, TOKEN

# Monkey‚Äëpatch pour ignorer AttributeError quand _process est manquant
_original_del = AudioSource.__del__

def _safe_del(self):
    try:
        _original_del(self)
    except AttributeError:
        # Si _process n'existe pas, on passe
        pass

AudioSource.__del__ = _safe_del

logging.basicConfig(level=logging.INFO)

intents = discord.Intents.default()
intents.message_content = False       # toujours utile pour limiter les privil√®ges
intents.voice_states    = True        # indispensable pour g√©rer les voix

class PrisyBot(discord.Bot):
    """
    PrisyBot - Un bot Discord pour la musique et les utilitaires.
    Ce bot utilise discord.py pour g√©rer les interactions avec Discord
    et yt-dlp pour la lecture de musique.
    """
    def __init__(self):
        super().__init__(
            intents=intents,
            debug_guilds=[GUILD_ID]
        )

    async def close(self):
        logging.info("üîå Shutdown: d√©connexion des salons vocaux‚Ä¶")
        for guild in self.guilds:
            vc = guild.voice_client
            if vc and vc.is_connected():
                logging.info("D√©connexion de %s", guild.name)
                await vc.disconnect()
        logging.info("üîå Fermeture du Bot")
        await super().close()

bot = PrisyBot()

@bot.event
async def on_ready():
    """
    √âv√©nement appel√© lorsque le bot est pr√™t.
    Affiche un message de confirmation dans la console.
    """
    logging.info("‚úÖ Connect√© en tant que %s", bot.user)

@bot.event
async def on_message():
    """
    √âv√©nement appel√© lorsqu'un message est re√ßu.
    """
    return

bot.load_extension("bot.cogs.utility")
bot.load_extension("bot.cogs.music")

if __name__ == "__main__":
    bot.run(TOKEN)
